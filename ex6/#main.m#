% ----------------------------------------------------------------------
%  MAIN PROGRAM - generated by the Rappture Builder
% ----------------------------------------------------------------------

% open the XML file containing the run parameters
% the file name comes in from the command-line via variable 'infile'
io = rpLib(infile);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Get input values from Rappture
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% get input value for input.note(value37)
value37 = rpLibGetString(io,'input.note(value37).current');

% get input value for input.group(parameters).number(n1)
n1 = rpLibGetDouble(io,'input.group(parameters).number(n1).current');

% get input value for input.group(parameters).number(n2)
n2 = rpLibGetDouble(io,'input.group(parameters).number(n2).current');

% get input value for input.group(parameters).number(n3)
n3 = rpLibGetDouble(io,'input.group(parameters).number(n3).current');

% get input value for input.group(value27).boolean(cmt)
str = rpLibGetString(io,'input.group(value27).boolean(cmt).current');
cmt = strcmpi(str,'yes');

% get input value for input.group(value27).string(value31)
value31 = rpLibGetString(io,'input.group(value27).string(value31).current');


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Add your code here for the main body of your program
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
t = 0:0.001:1;
z = exp(i*2*pi*n1*t)+exp(i*2*pi*n2*t)+exp(i*2*pi*n3*t);
% spit out progress messages as you go along...
rpUtilsProgress(0, 'Starting...');
rpUtilsProgress(5, 'Loading data...');
rpUtilsProgress(50, 'Half-way there');
rpUtilsProgress(100, 'Done');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Save output values back to Rappture
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% save output value for output.curve(spirograph)
% this assumes a vector 'x' and a vector 'y'
xydata = [real(z);imag(z)];
str = sprintf('%12g %12g\n', xydata);
rpLibPutString(io,'output.curve(spirograph).component.xy',str,0);


rpLibResult(io);
quit;
